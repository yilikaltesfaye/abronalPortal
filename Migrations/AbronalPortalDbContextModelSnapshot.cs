// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using abronalPortal.Models;

#nullable disable

namespace abronalPortal.Migrations
{
    [DbContext(typeof(AbronalPortalDbContext))]
    partial class AbronalPortalDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("abronalPortal.Models.ApplicantTestProject", b =>
                {
                    b.Property<int>("ApplicantTestProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplicantTestProjectId"));

                    b.Property<int?>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AssignedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("CurrentStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("CustomFeatures")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Deadline")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("GitHubRepoUrl")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LiveSiteUrl")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("OptionalLibraries")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SubmittedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("TemplateId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ApplicantTestProjectId")
                        .HasName("PK__Applican__7D28F6B2616F8143");

                    b.HasIndex("CurrentStatusId");

                    b.HasIndex("TemplateId");

                    b.HasIndex(new[] { "ApplicationId" }, "UQ__Applican__C93A4C98EFB4F738")
                        .IsUnique()
                        .HasFilter("[ApplicationId] IS NOT NULL");

                    b.ToTable("ApplicantTestProjects");
                });

            modelBuilder.Entity("abronalPortal.Models.Application", b =>
                {
                    b.Property<int>("ApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplicationId"));

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Bio")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal?>("Cgpa")
                        .HasColumnType("decimal(3, 2)")
                        .HasColumnName("CGPA");

                    b.Property<string>("CoverLetter")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("CurrentStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("CurrentYear")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Designation")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GitHubProfileLink")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("LastUpdated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("LeetCodeProfileLink")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LinkedInProfileLink")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Major")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PastProjectsJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PortfolioSiteLink")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ResumePath")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Skills")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("University")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<bool?>("WillingToRelocate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.HasKey("ApplicationId")
                        .HasName("PK__Applicat__C93A4C99EC1C900C");

                    b.HasIndex("CurrentStatusId");

                    b.HasIndex("UserId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("abronalPortal.Models.ApplicationStatus", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"));

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("StatusId")
                        .HasName("PK__Applicat__C8EE206397C8014D");

                    b.HasIndex(new[] { "StatusName" }, "UQ__Applicat__05E7698A6DC77E36")
                        .IsUnique();

                    b.ToTable("ApplicationStatus", (string)null);
                });

            modelBuilder.Entity("abronalPortal.Models.Decision", b =>
                {
                    b.Property<int>("DecisionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DecisionId"));

                    b.Property<int?>("AdminId")
                        .HasColumnType("int");

                    b.Property<int?>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DecisionDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool?>("IsTestProjectAssigned")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("NewStatusId")
                        .HasColumnType("int");

                    b.Property<string>("TestProjectRequirements")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("DecisionId")
                        .HasName("PK__Decision__C0F289864B37D5D9");

                    b.HasIndex("AdminId");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("NewStatusId");

                    b.ToTable("Decisions", t =>
                        {
                            t.HasTrigger("UpdateApplicationStatusAfterDecision");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("abronalPortal.Models.TestProjectTemplate", b =>
                {
                    b.Property<int>("TemplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TemplateId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("CreatedByAdminId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Features")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OptionalLibraries")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TechnologiesToUse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("TemplateId")
                        .HasName("PK__TestProj__F87ADD273582EA91");

                    b.HasIndex("CreatedByAdminId");

                    b.ToTable("TestProjectTemplates");
                });

            modelBuilder.Entity("abronalPortal.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime?>("AccountCreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GivenName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GrandFatherName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ProfilePicturePath")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("UserTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("UserTypeID");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CC4CAA604415");

                    b.HasIndex("UserTypeId");

                    b.HasIndex(new[] { "GivenName" }, "UQ__Users__79FA70BFC4EDC5F9")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D10534E56301E2")
                        .IsUnique();

                    b.HasIndex(new[] { "GrandFatherName" }, "UQ__Users__E2D003ED377B2DA0")
                        .IsUnique();

                    b.HasIndex(new[] { "FatherName" }, "UQ__Users__FB20DD61EB8CE6E4")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("abronalPortal.Models.UserType", b =>
                {
                    b.Property<int>("UserTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserTypeId"));

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserTypeId")
                        .HasName("PK__UserType__FA6C4C3C5BADDEEC");

                    b.HasIndex(new[] { "TypeName" }, "UQ__UserType__D4E7DFA8BBA5BFE9")
                        .IsUnique();

                    b.ToTable("UserTypes");
                });

            modelBuilder.Entity("abronalPortal.Models.ApplicantTestProject", b =>
                {
                    b.HasOne("abronalPortal.Models.Application", "Application")
                        .WithOne("ApplicantTestProject")
                        .HasForeignKey("abronalPortal.Models.ApplicantTestProject", "ApplicationId")
                        .HasConstraintName("FK__Applicant__Appli__02FC7413");

                    b.HasOne("abronalPortal.Models.ApplicationStatus", "CurrentStatus")
                        .WithMany("ApplicantTestProjects")
                        .HasForeignKey("CurrentStatusId")
                        .HasConstraintName("FK__Applicant__Curre__05D8E0BE");

                    b.HasOne("abronalPortal.Models.TestProjectTemplate", "Template")
                        .WithMany("ApplicantTestProjects")
                        .HasForeignKey("TemplateId")
                        .HasConstraintName("FK__Applicant__Templ__03F0984C");

                    b.Navigation("Application");

                    b.Navigation("CurrentStatus");

                    b.Navigation("Template");
                });

            modelBuilder.Entity("abronalPortal.Models.Application", b =>
                {
                    b.HasOne("abronalPortal.Models.ApplicationStatus", "CurrentStatus")
                        .WithMany("Applications")
                        .HasForeignKey("CurrentStatusId")
                        .HasConstraintName("FK__Applicati__Curre__778AC167");

                    b.HasOne("abronalPortal.Models.User", "User")
                        .WithMany("Applications")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Applicati__UserI__76969D2E");

                    b.Navigation("CurrentStatus");

                    b.Navigation("User");
                });

            modelBuilder.Entity("abronalPortal.Models.Decision", b =>
                {
                    b.HasOne("abronalPortal.Models.User", "Admin")
                        .WithMany("Decisions")
                        .HasForeignKey("AdminId")
                        .HasConstraintName("FK__Decisions__Admin__0A9D95DB");

                    b.HasOne("abronalPortal.Models.Application", "Application")
                        .WithMany("Decisions")
                        .HasForeignKey("ApplicationId")
                        .HasConstraintName("FK__Decisions__Appli__09A971A2");

                    b.HasOne("abronalPortal.Models.ApplicationStatus", "NewStatus")
                        .WithMany("Decisions")
                        .HasForeignKey("NewStatusId")
                        .HasConstraintName("FK__Decisions__NewSt__0C85DE4D");

                    b.Navigation("Admin");

                    b.Navigation("Application");

                    b.Navigation("NewStatus");
                });

            modelBuilder.Entity("abronalPortal.Models.TestProjectTemplate", b =>
                {
                    b.HasOne("abronalPortal.Models.User", "CreatedByAdmin")
                        .WithMany("TestProjectTemplates")
                        .HasForeignKey("CreatedByAdminId")
                        .HasConstraintName("FK__TestProje__Creat__7E37BEF6");

                    b.Navigation("CreatedByAdmin");
                });

            modelBuilder.Entity("abronalPortal.Models.User", b =>
                {
                    b.HasOne("abronalPortal.Models.UserType", "UserType")
                        .WithMany("Users")
                        .HasForeignKey("UserTypeId")
                        .HasConstraintName("FK__Users__UserTypeI__71D1E811");

                    b.Navigation("UserType");
                });

            modelBuilder.Entity("abronalPortal.Models.Application", b =>
                {
                    b.Navigation("ApplicantTestProject");

                    b.Navigation("Decisions");
                });

            modelBuilder.Entity("abronalPortal.Models.ApplicationStatus", b =>
                {
                    b.Navigation("ApplicantTestProjects");

                    b.Navigation("Applications");

                    b.Navigation("Decisions");
                });

            modelBuilder.Entity("abronalPortal.Models.TestProjectTemplate", b =>
                {
                    b.Navigation("ApplicantTestProjects");
                });

            modelBuilder.Entity("abronalPortal.Models.User", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("Decisions");

                    b.Navigation("TestProjectTemplates");
                });

            modelBuilder.Entity("abronalPortal.Models.UserType", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
